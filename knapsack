#include<stdio.h>;
void knapsack(int n, float weight[], float profit[], float capacity) {
float x[20], total_profit= 0;

int i, j, u;
u = capacity;

for (i = 0; i &lt; n; i++)
x[i] = 0.0;

for (i = 0; i &lt; n; i++)
{
if (weight[i] &gt; u)
break;
else
{
x[i] = 1.0;
total_profit= total_profit + profit[i];
u = u - weight[i];
}
}

if (i &lt; n)
x[i] = u / weight[i];

total_profit = total_profit + (x[i] * profit[i]);

printf(&quot;\nThe result vector is:- &quot;);
for (i = 0; i &lt; n; i++)
printf(&quot;%f\t&quot;, x[i]);

printf(&quot;\nMaximum profit is:- %f&quot;,total_profit);

}

int main()
{
float weight[20], profit[20], capacity;
int num, i, j;
float ratio[20], temp;

printf(&quot;\nEnter the no. of objects:- &quot;);
scanf(&quot;%d&quot;, &amp;num);

printf(&quot;\nEnter the wts and profits of each object:- &quot;);
for (i = 0; i &lt; num; i++) {
scanf(&quot;%f %f&quot;, &amp;weight[i], &amp;profit[i]);
}

printf(&quot;\nEnter the capacity of knapsack:- &quot;);
scanf(&quot;%f&quot;, &amp;capacity);

for (i = 0; i &lt; num; i++) {
ratio[i] = profit[i] / weight[i];
}

for (i = 0; i &lt; num; i++) {
for (j = i + 1; j &lt; num; j++) {

if (ratio[i] &lt; ratio[j]) {
temp = ratio[j];
ratio[j] = ratio[i];
ratio[i] = temp;

temp = weight[j];
weight[j] = weight[i];
weight[i] = temp;

temp = profit[j];
profit[j] = profit[i];
profit[i] = temp;
}
}
}

knapsack(num, weight, profit, capacity);
return(0);
}
